// <auto-generated />
using System;
using Antroji_Programavimo_Praktika_Mantas_J_.Aidles;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Antroji_Programavimo_Praktika_Mantas_J_.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Grupes.VartotojuGrupe", b =>
                {
                    b.Property<int>("VartG_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VartG_ID"));

                    b.Property<string>("VartG_adresas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VartG_pavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VartG_ID");

                    b.ToTable("vartotojuGrupes");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.MokejimaiPaslaugos.Mokejimas", b =>
                {
                    b.Property<int>("mok_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("mok_ID"));

                    b.Property<float>("mok_ikainis")
                        .HasColumnType("float");

                    b.Property<float>("mok_kiekis")
                        .HasColumnType("float");

                    b.Property<decimal>("mok_likutis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("mok_matovienetas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("mok_pavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("mok_pilnaKaina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("mok_terminoPabaiga")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("mok_terminoPradzia")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("mok_vartotojoID")
                        .HasColumnType("int");

                    b.HasKey("mok_ID");

                    b.HasIndex("mok_vartotojoID");

                    b.ToTable("Mokejimai");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.MokejimaiPaslaugos.Paslauga", b =>
                {
                    b.Property<int>("pasl_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("pasl_ID"));

                    b.Property<float>("pasl_ikainis")
                        .HasColumnType("float");

                    b.Property<string>("pasl_matovienetas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pasl_pavadinimas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("pasl_vartGID")
                        .HasColumnType("int");

                    b.HasKey("pasl_ID");

                    b.HasIndex("pasl_vartGID");

                    b.ToTable("Paslaugos");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Naudotojas", b =>
                {
                    b.Property<int>("naud_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("naud_ID"));

                    b.Property<string>("naud_elPastas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("naud_pavarde")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("naud_prisijungimoVardas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("naud_slaptazodis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("naud_telNumeris")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("naud_tipas")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("naud_vardas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("naud_ID");

                    b.ToTable("Naudotojai");

                    b.HasDiscriminator<string>("naud_tipas").HasValue("Naudotojas");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Gyventojas", b =>
                {
                    b.HasBaseType("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Naudotojas");

                    b.Property<string>("gyv_gimimoData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("gyv_gyvenimojiVieta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("gyv_permoka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("gyv_vartGID")
                        .HasColumnType("int");

                    b.HasIndex("gyv_vartGID");

                    b.HasDiscriminator().HasValue("Gyventojas");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Vadybininkas", b =>
                {
                    b.HasBaseType("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Naudotojas");

                    b.Property<int?>("vady_vartGID")
                        .HasColumnType("int");

                    b.HasIndex("vady_vartGID");

                    b.HasDiscriminator().HasValue("Vadybininkas");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Vartotojas.Administratorius", b =>
                {
                    b.HasBaseType("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Naudotojas");

                    b.Property<bool>("adm_vyriausiasis")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Administratorius");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.MokejimaiPaslaugos.Mokejimas", b =>
                {
                    b.HasOne("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Gyventojas", "Gyventojas")
                        .WithMany()
                        .HasForeignKey("mok_vartotojoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gyventojas");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.MokejimaiPaslaugos.Paslauga", b =>
                {
                    b.HasOne("Antroji_Programavimo_Praktika_Mantas_J_.Grupes.VartotojuGrupe", "VartotojuGrupe")
                        .WithMany()
                        .HasForeignKey("pasl_vartGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VartotojuGrupe");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Gyventojas", b =>
                {
                    b.HasOne("Antroji_Programavimo_Praktika_Mantas_J_.Grupes.VartotojuGrupe", "VartotojuGrupe")
                        .WithMany()
                        .HasForeignKey("gyv_vartGID");

                    b.Navigation("VartotojuGrupe");
                });

            modelBuilder.Entity("Antroji_Programavimo_Praktika_Mantas_J_.Vartotojas.Vadybininkas", b =>
                {
                    b.HasOne("Antroji_Programavimo_Praktika_Mantas_J_.Grupes.VartotojuGrupe", "VartotojuGrupe")
                        .WithMany()
                        .HasForeignKey("vady_vartGID");

                    b.Navigation("VartotojuGrupe");
                });
#pragma warning restore 612, 618
        }
    }
}
